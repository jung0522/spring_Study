name: CI/CD Pipeline

on:
  push:
    branches:
      - main   # main 브랜치로 푸시될 때마다 파이프라인 실행
  pull_request:
    branches:
      - main   # main 브랜치로 PR을 생성할 때마다 파이프라인 실행

jobs:
  build:
    runs-on: ubuntu-latest  # 우분투 환경에서 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 저장소의 코드를 가져옵니다.

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'   # Java 17 환경 설정

      - name: Build with Gradle
        run: ./gradlew clean build  # Gradle로 프로젝트 빌드

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .  # Docker 이미지 빌드
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub 로그인
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest  # Docker Hub에 푸시

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Pull and Run
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest  # 최신 이미지를 Docker Hub에서 pull
          docker stop my-app || true  # 기존 컨테이너가 있으면 종료
          docker rm my-app || true  # 기존 컨테이너가 있으면 삭제
          docker run -d -p 80:8080 --name my-app ${{ secrets.DOCKER_USERNAME }}/my-app:latest  # 컨테이너 실행
